#BlueJ class context
comment0.params=
comment0.target=NumberArray()
comment1.params=length
comment1.target=NumberArray(int)
comment10.params=
comment10.target=void\ reverse()
comment11.params=
comment11.target=void\ bublesort()
comment12.params=
comment12.target=void\ insertionsort()
comment13.params=beginningIndex
comment13.target=int\ minimalPosition(int)
comment14.params=
comment14.target=void\ selectionsort()
comment15.params=
comment15.target=void\ mergesort()
comment16.params=startIndex\ length
comment16.target=void\ split(int,\ int)
comment17.params=leftStartIndex\ leftLength\ rightStartIndex\ rightLength
comment17.target=void\ merge(int,\ int,\ int,\ int)
comment18.params=start\ newNumbers
comment18.target=void\ override(int,\ int[])
comment19.params=
comment19.target=void\ quicksort()
comment2.params=
comment2.target=void\ fill()
comment20.params=start\ length
comment20.target=void\ pivot(int,\ int)
comment3.params=upperLimit
comment3.target=void\ fill(int)
comment4.params=
comment4.target=void\ printArray()
comment5.params=index\ newValue
comment5.target=void\ einfuegen(int,\ int)
comment6.params=searchedValue
comment6.target=int\ search(int)
comment6.text=\r\n\ searches\ a\ specific\ value\ in\ the\ array\r\n\ and\ returns\ the\ adress\ of\ the\ position,\r\n\ if\ the\ value\ could\ not\ be\ found\ the\r\n\ value\ -1\ is\ returned.\r\n
comment7.params=index0\ index1
comment7.target=void\ exchange(int,\ int)
comment8.params=index0\ index1\ index2
comment8.target=void\ exchange(int,\ int,\ int)
comment9.params=indexes
comment9.target=void\ exchange(int[])
numComments=21
