#BlueJ class context
comment0.params=
comment0.target=Array()
comment1.params=length
comment1.target=Array(int)
comment10.params=
comment10.target=void\ reverse()
comment11.params=
comment11.target=long\ bubblesort()
comment12.params=
comment12.target=long\ insertionsort()
comment13.params=beginningIndex
comment13.target=int\ minimalPosition(int)
comment14.params=
comment14.target=long\ selectionsort()
comment15.params=
comment15.target=long\ mergesort()
comment16.params=startIndex\ length
comment16.target=void\ split(int,\ int)
comment17.params=leftStartIndex\ leftLength\ rightStartIndex\ rightLength
comment17.target=void\ merge(int,\ int,\ int,\ int)
comment18.params=start\ newNumbers
comment18.target=void\ override(int,\ java.lang.Object[])
comment19.params=
comment19.target=void\ secondQuickSort()
comment2.params=
comment2.target=void\ fill()
comment20.params=leftIndex\ rightIndex
comment20.target=void\ quick(int,\ int)
comment21.params=
comment21.target=long\ quicksort()
comment22.params=start\ length
comment22.target=void\ pivot(int,\ int)
comment23.params=elementOne\ elementTwo
comment23.target=boolean\ equals(java.lang.Object,\ java.lang.Object)
comment24.params=elementOne\ elementTwo
comment24.target=boolean\ objectEquals(java.lang.Object,\ java.lang.Object)
comment25.params=elementOne\ elementTwo
comment25.target=boolean\ objectSmallerAs(java.lang.Object,\ java.lang.Object)
comment26.params=elementOne\ elementTwo
comment26.target=boolean\ smallerAs(java.lang.Object,\ java.lang.Object)
comment27.params=elementOne\ elementTwo
comment27.target=boolean\ objectBiggerAs(java.lang.Object,\ java.lang.Object)
comment28.params=elementOne\ elementTwo
comment28.target=boolean\ biggerAs(java.lang.Object,\ java.lang.Object)
comment29.params=element
comment29.target=java.lang.Object\ convert(java.lang.Object)
comment3.params=upperLimit
comment3.target=void\ fill(int)
comment30.params=index
comment30.target=java.lang.Object\ getElement(int)
comment31.params=
comment31.target=int\ getLength()
comment32.params=element\ index
comment32.target=void\ setElement(java.lang.Object,\ int)
comment4.params=
comment4.target=void\ printArray()
comment5.params=element
comment5.target=java.lang.String\ printElement(java.lang.Object)
comment6.params=searchedValue
comment6.target=int\ search(java.lang.Object)
comment6.text=\r\n\ searches\ a\ specific\ value\ in\ the\ array\r\n\ and\ returns\ the\ adress\ of\ the\ position,\r\n\ if\ the\ value\ could\ not\ be\ found\ the\r\n\ value\ -1\ is\ returned.\r\n
comment7.params=index0\ index1
comment7.target=void\ exchange(int,\ int)
comment8.params=index0\ index1\ index2
comment8.target=void\ exchange(int,\ int,\ int)
comment9.params=indexes
comment9.target=void\ exchange(int[])
numComments=33
